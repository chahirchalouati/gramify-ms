# ---3---
name: Build and Publish authentication-service

on:
  push:
    branches: [ develop ]
    paths:
      - authentication-service/**
      - .github/workflows/deploy-authentication-service.yaml

env:
  KUBECONFIG: ${{ secrets.KUBECONFIG }}

jobs:

  maven:
    runs-on: self-hosted
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 17 Temurin
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: temurin
          cache: 'maven'

          server-id: github
          server-username: USER_NAME
          server-password: ACCESS_TOKEN

      - name: Build with Maven
        env:
          USER_NAME: ${{ secrets.USER_NAME }}
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        run: mvn clean install -s ./settings.xml   -pl authentication-service

      - name: Temporarily save jar artifact
        uses: actions/upload-artifact@v2
        with:
          name: authentication-service
          path: ${{ github.workspace }}/authentication-service/target/*.jar
          retention-days: 1
  docker:
    runs-on: self-hosted
    needs: maven

    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v1
        with:
          name: authentication-service
          path: ${{ github.workspace }}/authentication-service/target/

      - name: Login to github registry
        uses: actions-hub/docker/login@master
        env:
          DOCKER_USERNAME: ${{ github.actor }}
          DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
          DOCKER_REGISTRY_URL: ghcr.io

      - name: Build :latest
        if: success()
        run: |
          cd notification-service/
          docker build -f Dockerfile . -t ghcr.io/${{ github.actor }}/notification-service:${{github.run_number}}

      - name: Push to docker hub :latest
        if: success()
        uses: actions-hub/docker@master
        with:
          args: push ghcr.io/${{ github.actor }}/notification-service:${{github.run_number}}

  run:
    runs-on: self-hosted
    needs: [ maven, docker ]

    steps:
      - name: Configure Kubernetes CLI
        uses: azure/setup-kubectl@v1
        with:
          kubeconfig: ${{ env.KUBECONFIG }}

      - name: Deploy to Kubernetes
        uses: azure/k8s-deploy@v1
        with:
          manifests: |
            k8s/k8s-authentication-service.yaml
          command: apply
          args: -f -